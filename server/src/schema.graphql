  type Query {
    users(query: String): [User!]!
    exercises: [Exercise]
    water: [Water]
    me: User
  }

  type Mutation {
    createUser(id: ID!, data: CreateUserInput!): User!
    deleteUser(id:ID!): User!
    createExercise(id: ID!, data: CreateExerciseInput!): Exercise!
  }

  input CreateUserInput {
    name: String!
    email: String!
    age: Int 
    weight: Float
    height: Float
  }

  input CreateExerciseInput {
    name: String!
    duration: Float
    weight: Float
    reps: Int 
    sets: Int   
  }

  type User {
    id: ID!
    name: String!
    email: String!
    age: Int
    weight: Float
    height: Float
  }

  type Exercise {
    name: String!
    id: ID!
    weight: Float
    duration: Float
    reps: Int
    sets: Int
  }

  type Water {
    amount: Float
  }

  type Weight {
    current: Float
    past: [Float]
  }
